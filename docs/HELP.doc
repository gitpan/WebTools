{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f36\froman\fcharset0\fprq2 Times New Roman CYR;}{\f37\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f39\froman\fcharset238\fprq2 Times New Roman CE;}{\f40\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f42\froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f45\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f46\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f399\froman\fcharset238\fprq2 Times New Roman CYR CE;}{\f400\froman\fcharset204\fprq2 Times New Roman CYR Cyr;}
{\f402\froman\fcharset161\fprq2 Times New Roman CYR Greek;}{\f403\froman\fcharset162\fprq2 Times New Roman CYR Tur;}{\f404\froman\fcharset177\fprq2 Times New Roman CYR (Hebrew);}{\f405\froman\fcharset178\fprq2 Times New Roman CYR (Arabic);}
{\f406\froman\fcharset186\fprq2 Times New Roman CYR Baltic;}{\f407\froman\fcharset163\fprq2 Times New Roman CYR (Vietnamese);}{\f409\fswiss\fcharset238\fprq2 Verdana CE;}{\f410\fswiss\fcharset204\fprq2 Verdana Cyr;}
{\f412\fswiss\fcharset161\fprq2 Verdana Greek;}{\f413\fswiss\fcharset162\fprq2 Verdana Tur;}{\f416\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f417\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue127;\red0\green127\blue0;\red127\green0\blue0;\red153\green51\blue0;\red51\green153\blue102;\red255\green204\blue0;\red0\green127\blue127;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid869417\rsid10638950\rsid12140331\rsid14384398}
{\*\generator Microsoft Word 10.0.2605;}{\info{\title WebTool Help}{\author Julian Lishev}{\operator July}{\creatim\yr2001\mo10\dy28\hr16\min13}{\revtim\yr2001\mo10\dy29\hr20\min15}{\version3}{\edmins0}{\nofpages13}{\nofwords3054}{\nofchars17411}
{\*\company JTL Soft}{\nofcharsws20425}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot869417 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f36\fs40\cf6\insrsid10638950 HELP
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f36\fs40\cf6\insrsid10638950            }{\b\f36\fs32\ul\cf6\insrsid10638950 Contents:}{\b\fs32\ul\cf6\insrsid10638950 
\par }\pard \ql \fi-375\li375\ri0\nowidctlpar\tx375\faauto\rin0\lin375\itap0 {\b\fs28\cf1\insrsid10638950 1. Overview}{\b\f36\fs28\cf1\insrsid10638950 
\par }{\b\fs28\cf1\insrsid10638950 2. Web}{\b\f36\fs28\cf1\insrsid10638950  Tools}{\b\fs28\cf1\insrsid10638950 
\par 3. }{\b\f36\fs28\cf1\insrsid10638950 GlobExport}{\b\fs28\cf1\insrsid10638950 
\par 4. }{\b\f36\fs28\cf1\insrsid10638950 STDoutHandle}{\b\fs28\cf1\insrsid10638950 
\par 5. }{\b\f36\fs28\cf1\insrsid10638950 Xreader
\par }{\b\fs28\cf1\insrsid10638950 6. }{\b\f36\fs28\cf1\insrsid10638950 Config
\par }{\b\fs28\cf1\insrsid10638950 7. Various stuff}{\b\f36\fs28\cf1\insrsid10638950 
\par }{\b\fs28\cf1\insrsid10638950 8. Author}{\b\f36\fs28\cf1\insrsid10638950 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f37\cf17\insrsid10638950 
\par 
\par }{\b\f37\fs32\cf17\insrsid10638950 1. Overview
\par }{\f37\insrsid10638950 WebTools was projected to reduce maximum development work in web projects! It decide most of common tasks, so you can think about more important things at all. Note that this package is not 10-15 kb
\par and you need a time to learn everything about it. But don\rquote t afraid to
\par start. I am sure that it will be helpful for you :)}{\b\f37\fs32\cf17\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950    This document is not a real help it is reference! For more information and help please see examples!}{\b\f37\cf17\lang1026\langfe1033\langnp1026\insrsid10638950 
\par }{\b\f37\fs32\cf17\insrsid10638950 2. Web Tools
\par }{\f37\cf17\insrsid10638950     
\par }{\f37\cf1\insrsid10638950    This module capsulate most of functionally that Web developer need for its projects! 
\par    Mainly is support: sessions, user accounts, html-perl code (php like), Database support and more..
\par }{\b\f37\fs32\cf17\insrsid10638950 
\par }{\b\f37\fs28\ul\cf18\insrsid10638950 Exported Variables
\par 
\par }{\b\f37\cf17\insrsid10638950 *SESSIONSTDOUT 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Standard OUTput handler used by webtools to emulate
\par         PRINT-like operators.}{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 %SESREG 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Hash contained all registered variables with \'93this\'94 session.
\par }{\b\f37\cf17\insrsid10638950 %SIGNALS
\par        }{\b\f37\fs20\cf19\insrsid10638950 Hash contained all catched signals from user's script.
\par }{\b\f37\cf17\insrsid10638950 %cfghash 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Configuration hash contained all options from \'93config.pl\'94 file.}{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 %sess_cookies 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Contain all cookies received from stream.
\par }{\b\f37\cf17\insrsid10638950 %uploaded_files
\par        }{\b\f37\fs20\cf19\insrsid10638950 Contain filenames of all uploaded files via multipart form!
\par          These are names of files on local machine (i.e. your web server)
\par          You can open and read these files from your server\rquote s tmp directory!
\par          Note that you must to clean up by yourself (please delete these files
\par          after you had use it)        
\par }{\b\f37\cf17\insrsid10638950 $sess_cpg  
\par        }{\b\f37\fs20\cf19\insrsid10638950 That show type of session support and can be: \'93cookie\'94 or \'93get/post\'94
\par }{\b\f37\cf17\insrsid10638950 $sentcontent 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Show whether Send_Content() where called! (i.e. data were flushed to browser)
\par }{\b\f37\cf9\insrsid10638950 $ip_restrict_mode
\par }{\b\f37\fs20\cf13\insrsid10638950          Set 'on' or 'off' restriction of session by IP
\par }{\b\f37\cf17\insrsid10638950 $apacheshtdocs 
\par        }{\b\f37\fs20\cf19\insrsid10638950 This is apache`s htdocs directory.}{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 $reg_buffer 
\par        }{\b\f37\fs20\cf19\insrsid10638950 Contain register session file!
\par }{\b\f37\cf17\insrsid10638950 $cookie_path_cgi 
\par        }{\b\f37\fs20\cf19\insrsid10638950 That is PATH added to cookies (e.g: /cgi-bin)}{\b\f37\cf19\insrsid10638950  
\par }{\b\f37\cf17\insrsid10638950 $cookie_domain_cgi
\par        }{\b\f37\fs20\cf19\insrsid10638950 That is DOMAIN added to cookies (e.g: .july.bg)}{\b\f37\cf19\insrsid10638950  
\par }{\b\f37\cf17\insrsid10638950 $cookie_exp_date_cgi
\par        }{\b\f37\fs20\cf19\insrsid10638950 That is DATE added to cookies}{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 $secure_cookie_cgi
\par        }{\b\f37\fs20\cf19\insrsid10638950 That is SECURE atribute added to cookies (e.g: 1 or 0)}{\b\f37\cf19\insrsid10638950  
\par }{\b\f37\cf17\insrsid10638950 $session_started 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Show whether session_start were started!}{\b\f37\cf17\insrsid10638950 
\par $print_header_buffer 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Here is a place where script holds headers (only!)}{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 $print_flush_buffer 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Here is a place where script holds body!}{\b\f37\cf17\insrsid10638950 
\par $sql_host 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Variables that contain SQL host from confing.pl}{\b\f37\cf17\insrsid10638950 
\par $sql_user 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Variables that contain user name from confing.pl,
\par           used for accessing SQL server.}{\b\f37\fs20\cf17\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 $sql_pass 
\par         }{\b\f37\fs20\cf19\insrsid10638950 Variables that contain user pass from confing.pl, 
\par           used for accessing SQL server.}{\b\f37\fs20\cf17\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 $sql_database_sessions }{\b\f37\fs20\cf17\insrsid10638950 
\par           }{\b\f37\fs20\cf19\insrsid10638950 That is database name of session\rquote s table.
\par }{\b\f37\cf17\insrsid10638950 $sql_sessions_table 
\par         }{\b\f37\fs20\cf19\insrsid10638950 That is a name of session\rquote s table.
\par }{\b\f37\cf17\insrsid10638950 $cgi_script_timeout
\par         }{\b\f37\fs20\cf19\insrsid10638950 That is a expiration time of script i.e. maximum running 
\par           time of script. Default it\rquote s value is 120 seconds! If you
\par           need more time for your script, please don\rquote t change
\par           that var directly, please use function set_script_timeout
\par           If you thing you need more time for all your scripts at
\par           all then change this var (it is found into config.pl)
\par }{\b\f37\cf17\insrsid10638950 $cgi_lib_forbid_mulipart
\par }{\b\f37\fs22\cf19\insrsid10638950          If you want to protect yourself from multipart spam
\par          turn this to 'on' (Default it is set to \lquote off\rquote )
\par          If you disable this variable you will not longer receive
\par          Multipart forms via POST!
\par }{\b\f37\cf19\insrsid10638950 
\par }{\b\f37\fs28\ul\cf18\insrsid10638950 Exported Functions
\par }{\b\f37\cf17\insrsid10638950 
\par hideerror 
\par      }{\b\f37\fs20\cf19\insrsid10638950 Function that will be executed when error occur in SQL server.}{\b\f37\cf17\insrsid10638950 
\par sql_query 
\par      }{\b\f37\fs20\cf19\insrsid10638950 SQL query function.}{\b\f37\cf17\insrsid10638950  }{\b\f37\fs20\cf17\insrsid10638950 $result = }{\b\f37\fs20\cf6\insrsid10638950 sql_query }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 
$query,$DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 sql_fetchrow 
\par      }{\b\f37\fs20\cf19\insrsid10638950 SQL function that fetching rows from SQL server. 
\par       }{\b\f37\fs20\cf17\insrsid10638950 @arr =}{\b\f37\fs20\cf19\insrsid10638950  }{\b\f37\fs20\cf6\insrsid10638950 sql_fetchrow}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $result_handler}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\fs20\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 sql_affected_rows 
\par       }{\b\f37\fs20\cf19\insrsid10638950 SQL function that show a count of affected rows. 
\par        }{\b\f37\fs20\cf17\insrsid10638950 $number = }{\b\f37\fs20\cf6\insrsid10638950 sql_affected_rows }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $result_handler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 sql_inserted_id 
\par       }{\b\f37\fs20\cf19\insrsid10638950 SQL function that show current inserted ID number.
\par        }{\b\f37\fs20\cf17\insrsid10638950 $number = }{\b\f37\fs20\cf6\insrsid10638950 sql_inserted_id}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $result_handler}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par sql_num_rows 
\par       }{\b\f37\fs20\cf19\insrsid10638950 SQL function that show a count of affected rows.
\par        }{\b\f37\fs20\cf17\insrsid10638950 $number = }{\b\f37\fs20\cf6\insrsid10638950 sql_ num_fields}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $result_handler}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par sql_quote 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Quote one scalar.
\par }{\b\f37\fs20\cf17\insrsid10638950        $quoted_string = }{\b\f37\fs20\cf6\insrsid10638950 sql_quote}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $unquoted,$DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 sql_connect 
\par }{\b\f37\fs20\cf19\insrsid10638950        Connect SQL server. No params needed!
\par        Return }{\b\f37\fs20\cf17\insrsid10638950 $DBHandler}{\b\f37\fs20\cf19\insrsid10638950  as result.
\par }{\b\f37\cf17\insrsid10638950 sql_connect 
\par }{\b\f37\fs20\cf19\insrsid10638950        Connect SQL server. Same as previous but it's take up to 6 parameters.
\par        }{\b\f37\fs20\cf17\insrsid10638950 $DBHandler}{\b\f37\fs20\cf19\insrsid10638950  }{\b\f37\fs20\cf17\insrsid10638950 = }{\b\f37\fs20\cf6\insrsid10638950 sql_quote}{\b\f37\fs20\cf17\insrsid10638950  }{\b\f37\fs20\cf9\insrsid10638950 (}{
\b\f37\fs20\cf11\insrsid10638950 $host,$database,$user,$pass,[$port],[$full_path]}{\b\f37\fs20\cf9\insrsid10638950 );}{\b\f37\fs20\cf19\insrsid10638950 
\par        }{\b\f37\fs20\cf11\insrsid10638950 $host }{\b\f37\fs20\cf19\insrsid10638950 is needfull only for }{\b\f37\fs20\cf9\insrsid10638950 MySQL DB}{\b\f37\fs20\cf19\insrsid10638950 ; }{\b\f37\fs20\cf11\insrsid10638950 $database }{
\b\f37\fs20\cf19\insrsid10638950 is }{\b\f37\fs20\cf9\insrsid10638950 DNS}{\b\f37\fs20\cf19\insrsid10638950  for }{\b\f37\fs20\cf9\insrsid10638950 Access DB}{\b\f37\fs20\cf19\insrsid10638950 , normal
\par        DB name for }{\b\f37\fs20\cf9\insrsid10638950 MySQL}{\b\f37\fs20\cf19\insrsid10638950  and file name (without path and without ext eg.: 'july');
\par        }{\b\f37\fs20\cf11\insrsid10638950 $port }{\b\f37\fs20\cf19\insrsid10638950 is proper only for }{\b\f37\fs20\cf9\insrsid10638950 MySQL DB}{\b\f37\fs20\cf19\insrsid10638950 ; }{\b\f37\fs20\cf11\insrsid10638950 $full_path }{
\b\f37\fs20\cf19\insrsid10638950 is a path to }{\b\f37\fs20\cf9\insrsid10638950 Flat DB }{\b\f37\fs20\cf19\insrsid10638950 file (eg.: ./db/)
\par        NOTE: You should specify all parameters except these in "[]" (if not applyable)
\par }{\b\f37\cf9\insrsid10638950 sql_select_db}{\b\f37\fs20\cf19\insrsid10638950 \line        Select new database.
\par        }{\b\f37\fs20\cf17\insrsid10638950 $new_DBHandler = }{\b\f37\fs20\cf6\insrsid10638950 sql_select_db}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $new_database,$DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\fs20\cf13\insrsid10638950        As result of this function new database are now activated (selected) but you \line        }{\b\f37\fs20\cf6\insrsid10638950 must}{\b\f37\fs20\cf13\insrsid10638950  save (and }{\b\f37\fs20\cf6\insrsid10638950 use}{
\b\f37\fs20\cf13\insrsid10638950 ) the }{\b\f37\fs20\cf6\insrsid10638950 new one Database Handler instead of previous one!
\par }{\b\f37\cf17\insrsid10638950 sql_disconnect 
\par }{\b\f37\fs20\cf19\insrsid10638950        Disconnect SQL server. No params needed!
\par        Return }{\b\f37\fs20\cf17\insrsid10638950 1}{\b\f37\fs20\cf19\insrsid10638950  as result.\line }{\b\f37\cf9\insrsid10638950 sql_errmsg}{\b\f37\fs20\cf19\insrsid10638950  \line        Return error message.
\par       }{\b\f37\fs20\cf17\insrsid10638950 $err_mes = }{\b\f37\fs20\cf6\insrsid10638950 sql_errmsg}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf9\insrsid10638950 sql_errno}{\b\f37\fs20\cf19\insrsid10638950 \line        Return error number.
\par       }{\b\f37\fs20\cf17\insrsid10638950 $err_numb = }{\b\f37\fs20\cf6\insrsid10638950 sql_errno}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf9\insrsid10638950 sql_data_seek}{\b\f37\fs20\cf19\insrsid10638950 \line        Move result handler to some row number.
\par       }{\b\f37\fs20\cf17\insrsid10638950 $res = }{\b\f37\fs20\cf6\insrsid10638950 sql_data_seek}{\b\f37\fs20\cf17\insrsid10638950  (}{\b\f37\fs20\cf18\insrsid10638950 $row_number,$result_handler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 DB_OnDestroy 
\par }{\b\f37\fs20\cf19\insrsid10638950        Event on destroy DB handler!
\par }{\b\f37\cf17\insrsid10638950 DB_OnExit}{\f37\cf17\insrsid10638950 
\par }{\b\f37\fs20\cf19\insrsid10638950        Event on script exit!
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________}{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 
\par session_start
\par }{\b\f37\fs20\cf19\insrsid10638950        Start SESSION. It can be inherited or created as is.
\par }{\b\f37\fs20\cf17\insrsid10638950        $SID = }{\b\f37\fs20\cf6\insrsid10638950 session_start }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler,$NewSessionFLAG}{\b\f37\fs20\cf17\insrsid10638950 );\line }{
\b\f37\fs20\cf13\insrsid10638950        Where $NewSessionFLAG can be 1 or 0 (1 - will create absolutely new session
\par        (old session is ignored), 0 - will inherit old session if any)}{\b\f37\cf13\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 session_register 
\par }{\b\f37\fs20\cf19\insrsid10638950        Register one buffer (compressed vars) into Session table.
\par }{\b\f37\fs20\cf17\insrsid10638950        $result = }{\b\f37\fs20\cf6\insrsid10638950 session_register }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $Buffer,$DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\cf17\insrsid10638950 
\par session_destroy 
\par }{\b\f37\fs20\cf19\insrsid10638950        Destroy current session
\par }{\b\f37\fs20\cf17\insrsid10638950        $SID = }{\b\f37\fs20\cf6\insrsid10638950 session_destroy }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 session_ip_restrict
\par }{\b\f37\fs20\cf19\insrsid10638950        Set mode of session restriction by IP. Valid }{\b\f37\fs20\cf11\insrsid10638950 modes}{\b\f37\fs20\cf19\insrsid10638950  are: 'on' and 'off'
\par }{\b\f37\fs20\cf17\insrsid10638950        }{\b\f37\fs20\cf6\insrsid10638950 session_ip_restrict }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $mode}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 session_id 
\par }{\b\f37\fs20\cf19\insrsid10638950        Return current $SID as result.
\par }{\b\f37\cf17\insrsid10638950 session_clear_expired 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Clear all expired records from database.
\par }{\b\f37\fs20\cf17\insrsid10638950        $SID = }{\b\f37\fs20\cf6\insrsid10638950 session_clear_expired }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par session_id_adder
\par       }{\b\f37\fs20\cf19\insrsid10638950 Add SID ident to all links and forms in source!
\par }{\b\f37\fs20\cf17\insrsid10638950        $result_source = }{\b\f37\fs20\cf6\insrsid10638950 session_id_adder }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $source}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par session_expire_update 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Update current session`s time up to now.
\par }{\b\f37\fs20\cf17\insrsid10638950        $result = }{\b\f37\fs20\cf6\insrsid10638950 session_expire_update }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $DBHandler}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\cf17\insrsid10638950 
\par action_sid_adder 
\par }{\b\f37\fs20\cf19\insrsid10638950        Add SID indents to all forms in source!
\par }{\b\f37\fs20\cf17\insrsid10638950        $result_source = }{\b\f37\fs20\cf6\insrsid10638950 action_sid_adder }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $source}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par href_sid_adder 
\par }{\b\f37\fs20\cf19\insrsid10638950        Add SID ident to all links in source!
\par }{\b\f37\fs20\cf17\insrsid10638950        $result_source = }{\b\f37\fs20\cf6\insrsid10638950 href_sid_adder }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $source}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 

\par convert_ses_time 
\par }{\b\f37\fs20\cf19\insrsid10638950        Convert session time to \'93codded\'94 integer.
\par }{\b\f37\fs20\cf17\insrsid10638950        $coded_string = }{\b\f37\fs20\cf6\insrsid10638950 convert_ses_time }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $source_time,$count_of_new_str}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\cf17\insrsid10638950 
\par new_session 
\par }{\b\f37\fs20\cf19\insrsid10638950        Show whether new session were started.
\par }{\b\f37\cf17\insrsid10638950 GetCurrentSID
\par }{\b\f37\fs20\cf19\insrsid10638950        Return current Session ID.
\par }{\b\f37\cf17\insrsid10638950 register_var 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Register one variable (scalar , array or hash) into current session.
\par }{\b\f37\fs20\cf17\insrsid10638950        $coded_buffer = }{\b\f37\fs20\cf6\insrsid10638950 register_var }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $type,$name,@val}{\b\f37\fs20\cf17\insrsid10638950 );\line }{
\b\f37\fs20\cf20\insrsid10638950        where }{\b\f37\fs20\cf21\insrsid10638950 $type}{\b\f37\fs20\cf20\insrsid10638950  could be }{\b\f37\fs20\cf22\insrsid10638950 scalar, array or hash}{\b\f37\fs20\cf20\insrsid10638950 , }{
\b\f37\fs20\cf21\insrsid10638950 $name}{\b\f37\fs20\cf20\insrsid10638950  can be any 
\par        permitted variable name under whom module will save data.
\par        }{\b\f37\fs20\cf21\insrsid10638950 @val}{\b\f37\fs20\cf20\insrsid10638950  is a array that contain data for registration. It could be also
\par        just scalar or even hash}{\b\f37\cf20\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 unregister_var 
\par }{\b\f37\fs20\cf19\insrsid10638950        UnRegister one variable (scalar or array)
\par       }{\b\f37\fs20\cf17\insrsid10638950  $coded_buffer = }{\b\f37\fs20\cf6\insrsid10638950 unregister_var }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name,$buffer}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\cf17\insrsid10638950 
\par read_scalar 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Read one scalar from DB (Already Registrated!!!)
\par }{\b\f37\fs20\cf17\insrsid10638950        $scalar = }{\b\f37\fs20\cf6\insrsid10638950 read_scalar }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 
\par read_array
\par       }{\b\f37\fs20\cf19\insrsid10638950 Read one array from DB (Already Registrated!!!)
\par }{\b\f37\fs20\cf17\insrsid10638950        @array = }{\b\f37\fs20\cf6\insrsid10638950 read_array }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 read_hash
\par       }{\b\f37\fs20\cf19\insrsid10638950 Read one hash from DB (Already Registrated!!!)
\par }{\b\f37\fs20\cf17\insrsid10638950        %hash = }{\b\f37\fs20\cf6\insrsid10638950 read_hash }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 
\par update_var 
\par       }{\b\f37\fs20\cf19\insrsid10638950 Update one variable from $reg_buffer.
\par }{\b\f37\fs20\cf17\insrsid10638950        $coded_buffer = }{\b\f37\fs20\cf6\insrsid10638950 update_var }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $type,$name,$buffer,@new_val}{\b\f37\fs20\cf17\insrsid10638950 );}{
\b\f37\cf17\insrsid10638950 
\par exists_var 
\par      }{\b\f37\fs20\cf19\insrsid10638950  Check whether one variable is putted into $reg_var!
\par }{\b\f37\fs20\cf17\insrsid10638950        $bool_result = }{\b\f37\fs20\cf6\insrsid10638950 exists_var }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $type,$name,$buffer}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 session_set_id_name
\par      }{\b\f37\fs20\cf19\insrsid10638950  Set name of session (labeled) (exmpl: \lquote sid\rquote )
\par }{\b\f37\fs20\cf17\insrsid10638950        }{\b\f37\fs20\cf6\insrsid10638950 session_set_id_name }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $new_sid_label}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 session_id_name 
\par      }{\b\f37\fs20\cf19\insrsid10638950  Get current name of sesson (exmpl: \lquote pid\rquote ,\rquote sid\rquote \'85)
\par }{\b\f37\fs20\cf6\insrsid10638950        session_id_name }{\b\f37\fs20\cf17\insrsid10638950 ();
\par }{\b\f37\cf17\insrsid10638950 session_expiration
\par      }{\b\f37\fs20\cf19\insrsid10638950  Get current expiration date (exmpl: \lquote +1h\rquote )
\par }{\b\f37\fs20\cf6\insrsid10638950        session_expiration }{\b\f37\fs20\cf17\insrsid10638950 ();
\par }{\b\f37\cf17\insrsid10638950 session_cookie_path
\par      }{\b\f37\fs20\cf19\insrsid10638950  Get current session cookie`s pat (exmpl: \lquote /cgi-bin/\rquote )
\par }{\b\f37\fs20\cf6\insrsid10638950        session_cookie_path }{\b\f37\fs20\cf17\insrsid10638950 ();
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________
\par }{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 delete_cookie
\par }{\b\f37\fs20\cf19\insrsid10638950       High level delete cookie function. It can get only 1 param!
\par }{\b\f37\fs20\cf6\insrsid10638950       delete_cookie }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 write_cookie
\par }{\b\f37\fs20\cf19\insrsid10638950       High level write cookie function. It can get up to 6 params!
\par }{\b\f37\fs20\cf6\insrsid10638950       write_cookie }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name,$value,$expr_date,$path,$domain}{\b\f37\fs20\cf17\insrsid10638950 );
\par }{\b\f37\fs20\cf19\insrsid10638950       Params from 3 to 6 are not required!
\par }{\b\f37\cf17\insrsid10638950 read_cookie 
\par }{\b\f37\fs20\cf19\insrsid10638950       High level read cookie function. It can get only 1 param!
\par }{\b\f37\fs20\cf6\insrsid10638950       read_cookie }{\b\f37\fs20\cf17\insrsid10638950 (}{\b\f37\fs20\cf18\insrsid10638950 $name}{\b\f37\fs20\cf17\insrsid10638950 );}{\b\f37\cf17\insrsid10638950 
\par GetCookies
\par }{\b\f37\fs20\cf19\insrsid10638950       Get all cookies(or only wished) and put them all into %Cookies.
\par       Don`t call this function directrly! (Use: read_cookie() instead!)}{\b\f37\fs20\cf17\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 SetCookies
\par }{\b\f37\fs20\cf19\insrsid10638950       Set cookie(or cookies) and return raw cookie string!
\par       Don`t call this function directrly! (Use: write_cookie() instead!)}{\b\f37\cf17\insrsid10638950 
\par SetCookieExpDate
\par }{\b\f37\fs20\cf19\insrsid10638950       Set cookie`s expiration for a cookie!
\par }{\b\f37\cf17\insrsid10638950 SetCookiePath
\par }{\b\f37\fs20\cf19\insrsid10638950       Set cookie`s path for a cookie!}{\b\f37\cf17\insrsid10638950 
\par SetCookieDomain
\par }{\b\f37\fs20\cf19\insrsid10638950       Set cookie`s domain for a cookie!}{\b\f37\cf17\insrsid10638950 
\par SetSecureCookie
\par }{\b\f37\fs20\cf19\insrsid10638950       Set cookie`s secure attribute for a cookie!}{\b\f37\cf17\insrsid10638950 
\par GetCompressedCookies
\par }{\b\f37\fs20\cf19\insrsid10638950       Get all compressed cookies (like common function)
\par }{\b\f37\cf17\insrsid10638950 SetCompressedCookies
\par }{\b\f37\fs20\cf19\insrsid10638950       Set compressed cookies (like common function)
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________}{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 
\par Header 
\par }{\b\f37\fs20\cf19\insrsid10638950       Write one Header filed. 
\par }{\b\f37\fs20\cf6\insrsid10638950       Header }{\b\f37\fs20\cf17\insrsid10638950 (type=>}{\b\f37\fs20\cf18\insrsid10638950 \rquote type\rquote }{\b\f37\fs20\cf17\insrsid10638950  , val=>}{\b\f37\fs20\cf18\insrsid10638950 \rquote value\rquote }{
\b\f37\fs20\cf17\insrsid10638950 );
\par       }{\b\f37\fs20\cf19\insrsid10638950 Type can be: \lquote content\rquote ,\rquote  cookie\rquote , \lquote raw\rquote ,\rquote  modified\rquote ,\rquote  MIME\rquote ,\rquote  window\rquote ,
\par            \rquote Pragma\rquote ,\rquote  Expires\rquote ,\rquote  Referer\rquote .
\par       And respective example`s values for val are:
\par        \lquote text/html\rquote ,\rquote name=July;Path=/\rquote ,\rquote full featured row field!\rquote , \lquote some DATE\rquote ,
\par        \lquote 1.0\rquote , \lquote some window target\rquote , \lquote nocache\rquote , \lquote some DATE\rquote .
\par       Most wanted type is row!!! NOTE: You can`t access HTTP Header
\par       anyway except Header function!
\par }{\b\f37\cf17\insrsid10638950 Parse_Form 
\par }{\b\f37\fs20\cf19\insrsid10638950       Not implemented (only for back ware compatibility)!
\par }{\b\f37\cf17\insrsid10638950 b_print 
\par }{\b\f37\fs20\cf19\insrsid10638950       Not implemented (only for back ware compatibility)!
\par }{\b\f37\cf17\insrsid10638950 ClearBuffer 
\par }{\b\f37\fs20\cf19\insrsid10638950       Clear current printed body data! (thit way only!)
\par }{\b\f37\cf17\insrsid10638950 ClearHeader
\par }{\b\f37\fs20\cf19\insrsid10638950       Clear current printed header data! (this way only!)
\par }{\b\f37\cf17\insrsid10638950 flush_print 
\par }{\b\f37\fs20\cf19\insrsid10638950       At the end of script this function automatically flush all header\rquote s 
\par       and body`s data!!! (automatically session, cookies and so on\'85)
\par }{\b\f37\cf17\insrsid10638950 read_form 
\par }{\b\f37\fs20\cf19\insrsid10638950       Read one var form input form (not need!!! All vars from forms
\par       and cookies are global variables!)
\par }{\b\f37\cf17\insrsid10638950 read_form_array 
\par }{\b\f37\fs20\cf19\insrsid10638950       Same like previous but reading is from array not from hash!
\par }{\b\f37\cf17\insrsid10638950 read_var 
\par }{\b\f37\fs20\cf19\insrsid10638950       Read one scalar from browser (via cookie or just via link/form... 
\par        - no mater :-)))  (Well I sad\'85not need anymore }{\b\f10\fs20\cf19\insrsid10638950 \'4a}{\f37\fs20\cf19\insrsid10638950 
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________}{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 
\par RunScript 
\par }{\b\f37\fs20\cf19\insrsid10638950       Well that is main function at all! :-))) It eval (first compile html
\par       Code into Perl code) all.
\par }{\b\f37\cf17\insrsid10638950 set_script_timeout
\par }{\b\f37\fs20\cf19\insrsid10638950       That function set script\rquote s timeout (in seconds), after which scripts
\par       terminate automatically! This prevent from infinitive scripts!\line       $res =  }{\b\f37\fs20\cf18\insrsid10638950 set_script_timeout}{\b\f37\fs20\cf19\insrsid10638950  (}{\b\f37\fs20\cf17\insrsid10638950 $time_out_in_sec}{
\b\f37\fs20\cf19\insrsid10638950 );
\par }{\b\f37\cf17\insrsid10638950 r_str 
\par rand_srand 
\par }{\b\f37\fs20\cf19\insrsid10638950       Random string generator (and initial sub)
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________}{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 
\par SignUpUser 
\par }{\b\f37\fs20\cf19\insrsid10638950       $res =  }{\b\f37\fs20\cf18\insrsid10638950 SignUpUser}{\b\f37\fs20\cf19\insrsid10638950  (}{\b\f37\fs20\cf17\insrsid10638950 $user,$pass,$data,$dbh}{\b\f37\fs20\cf19\insrsid10638950 );
\par       $res can be 1 - success and 0 - }{\b\f10\fs20\cf19\insrsid10638950 \'4c}{\b\f37\fs20\cf19\insrsid10638950 
\par }{\b\f37\cf17\insrsid10638950 SignInUser 
\par }{\b\f37\fs20\cf19\insrsid10638950       ($ID,$DATA) = }{\b\f37\fs20\cf18\insrsid10638950 SignInUser}{\b\f37\fs20\cf19\insrsid10638950  (}{\b\f37\fs20\cf17\insrsid10638950 $user,$pass,$dbh}{\b\f37\fs20\cf19\insrsid10638950 );
\par        $ID is Id on user
\par        $DATA is custom data on same user!
\par }{\b\f37\fs20\cf3\insrsid10638950 ________________________________________________
\par }{\b\f37\fs20\ul\cf3\insrsid10638950 
\par }{\f37\cf1\insrsid10638950    That module support base signals from Unix/Linux. So you can handle follow SIGs:
\par 
\par \lquote }{\b\f37\cf2\insrsid10638950 OnFlush}{\f37\cf1\insrsid10638950 \rquote   - That event will happened when script prepare to print all data (Header and Body).
\par 
\par \lquote }{\b\f37\cf2\insrsid10638950 OnError}{\f37\cf1\insrsid10638950 \rquote   -  That event will happened when some internal script error appear.
\par 
\par \lquote }{\b\f37\cf2\insrsid10638950 OnExit}{\f37\cf1\insrsid10638950 \rquote     - That event will happened when script exit.
\par 
\par \lquote }{\b\f37\cf2\insrsid10638950 OnTerm}{\f37\cf1\insrsid10638950 \rquote   - You can use this event when connection between server and browser is broken (used signals: TERM,STOP,PIPE)
\par 
\par \lquote }{\b\f37\cf2\insrsid10638950 OnTimeOut}{\f37\cf1\insrsid10638950 \rquote  - This event will happened when your scripts lifetime is down (Default it is 120 seconds) (used signal: ALRM)
\par 
\par To use these events you must initialize global hash %SIGNALS whit proper reference to sub.
\par Example}{\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950 :}{\f37\cf1\insrsid10638950 
\par }{\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950    }{\f37\cf1\insrsid10638950 
\par }{\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950    }{\b\f37\cf1\insrsid10638950 $SIGNALS\{\lquote OnTimeOut\rquote \} = \\&MyDefaultTimeOutSubroutine;
\par }{\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950    }{\f37\cf1\insrsid10638950 
\par }{\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950    }{\b\f37\cf1\insrsid10638950 sub MyDefaultTimeOutSubroutine \{ print \'93Timeout!!!\'94; \}}{\b\f37\cf1\lang1026\langfe1033\langnp1026\insrsid10638950 
\par }{\f37\cf1\insrsid10638950 
\par Note: All events are case-sensitive!
\par }{\b\f37\fs32\cf17\insrsid10638950 
\par 3. GlobExport
\par }{\f37\cf1\insrsid10638950 
\par   This module is used indirect from scripts (included by webtools.pm). It parses input data from form (POST), from GET and from Cookies. All input data are exports to global variables!
\par 
\par   There is not support functions for this module (constructor and destructor are automatically called).
\par 
\par }{\b\f37\fs32\cf17\insrsid10638950 4. STDoutHandle
\par }{\f37\cf1\insrsid10638950 
\par  This module catch standard output (STDOUT) and printed data are buffered on default.
\par 
\par 
\par }{\b\f37\fs32\cf17\insrsid10638950 5. XReader
\par }{\f37\cf1\insrsid10638950 
\par   This module is very cool its supply possibility of script to use extern templates (html code and SQL inline)
\par  
\par   That function read from file HTML data (with some
\par futures) and substitute SQL queries and vars with
\par respective values!
\par 
\par }{\b\f37\fs22\cf19\insrsid10638950 $scalar}{\f37\cf1\insrsid10638950  = }{\b\f37\fs22\cf6\insrsid10638950 xreader}{\b\f37\fs22\cf1\insrsid10638950 (}{\b\f37\fs22\cf17\insrsid10638950 $N_of_part,$filename}{\b\f37\fs22\cf1\insrsid10638950 );
\par 
\par }{\b\f37\fs20\cf1\insrsid10638950 For more information see }{\b\f37\fs20\cf11\insrsid10638950 docs/examples/Lesson-8-xreader}{\b\f37\fs20\cf1\insrsid10638950 
\par }{\b\f37\fs22\cf1\insrsid10638950 
\par }{\b\f37\fs32\cf17\insrsid10638950 6. Config.pl
\par 
\par }{\b\f37\fs22\cf1\insrsid10638950 Typical configuration for "Web Tools\'94
\par }{\f37\cf1\insrsid10638950  
\par }{\b\f37\cf1\insrsid10638950 [}{\b\f37\cf12\insrsid10638950 Name_Of_Project}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $projectname }{\b\f37\cf1\insrsid10638950 = 'webtools';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf6\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # This is a name of project. Also this name is a base for other parameters in this configuration file 
\par 
\par }{\b\f37\cf1\insrsid10638950 [}{\b\f37\cf12\insrsid10638950 SQL}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $db_support}{\b\f37\cf1\insrsid10638950  = 'db_flat';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Name of database driver. Can be: db_mysql, db_access, db_flat
\par 
\par }{\b\f37\cf2\insrsid10638950 $sql_host}{\b\f37\cf1\insrsid10638950  = 'localhost';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # host/ip to DB server (MySQL)
\par 
\par }{\b\f37\cf2\insrsid10638950 $sql_port}{\b\f37\cf1\insrsid10638950  = '3306';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Port of SQL server
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $sql_user}{\b\f37\cf1\insrsid10638950  = 'me';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # User name used to connect SQL server
\par 
\par }{\b\f37\cf2\insrsid10638950 $sql_pass }{\b\f37\cf1\insrsid10638950 = 'secret_password';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # ... and DB password
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $mysqlbequiet }{\b\f37\cf1\insrsid10638950 = '1';
\par }{\b\f37\fs20\cf1\insrsid10638950 # If you use MySQL then: Must be QUIET?
\par }{\b\f37\cf1\insrsid10638950 
\par [}{\b\f37\cf12\insrsid10638950 DataBase}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $sql_database_sessions }{\b\f37\cf1\insrsid10638950 =  }{\b\f37\cf2\insrsid10638950 $projectname}{\b\f37\cf1\insrsid10638950 .'db';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Database name (name some like project!?!?!). If need change it!
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $sql_sessions_table }{\b\f37\cf1\insrsid10638950 =  $projectname.'_sessions';    }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Name of session table.
\par 
\par }{\b\f37\cf2\insrsid10638950 $sql_user_table }{\b\f37\cf1\insrsid10638950 = }{\b\f37\cf2\insrsid10638950 $projectname}{\b\f37\cf1\insrsid10638950 .'_users';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Table that contain all users (and admin too)
\par }{\b\f37\cf1\insrsid10638950 
\par [}{\b\f37\cf12\insrsid10638950 CHECK}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf6\insrsid10638950 $check_module_functions }{\b\f37\cf1\insrsid10638950 = '}{\b\f37\cf6\insrsid10638950 on}{\b\f37\cf1\insrsid10638950 ';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # SCRIPTS RUN IN CHECK MODE! After first check(test),
\par # please turn this '}{\b\f37\fs20\cf6\insrsid10638950 off}{\b\f37\fs20\cf1\insrsid10638950 '!
\par #}{\b\f37\fs20\cf9\insrsid10638950  YOU CAN ALWAYS TURN THIS ON WHEN YOU WANT TO CHECK
\par # YOUR CURRENT CONFIGURATION WITHOUT ANY OPPRESSION}{\b\f37\fs20\cf6\insrsid10638950 !!!
\par }{\b\f37\cf1\insrsid10638950 
\par 
\par [}{\b\f37\cf12\insrsid10638950 Secure}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $wait_attempt}{\b\f37\cf1\insrsid10638950  = '4';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Count of attempts when database is flocked
\par 
\par }{\b\f37\cf2\insrsid10638950 $wait_for_open}{\b\f37\cf1\insrsid10638950  = '2.0';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Time between two attempts (in sec)
\par 
\par }{\b\f37\cf2\insrsid10638950 $sess_time}{\b\f37\cf1\insrsid10638950  = '2';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Expire time on session: 60 minutes
\par 
\par }{\b\f37\cf1\insrsid10638950 %dts = }{\b\f37\fs20\cf1\insrsid10638950 ('second' => 's','minute' => 'm', 'hour' => 'h', 'month' => 'M', 'year' => 'y');
\par 
\par }{\b\f37\cf2\insrsid10638950 $sys_conf_d}{\b\f37\cf1\insrsid10638950  = 'hour';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Type of sess time dimension
\par 
\par }{\b\f37\cf1\insrsid10638950 $sys_c_d_h = $dts\{$sys_conf_d\};
\par }{\b\f37\fs20\cf1\insrsid10638950 # }{\b\f37\fs20\cf11\insrsid10638950 s}{\b\f37\fs20\cf1\insrsid10638950 (econds) }{\b\f37\fs20\cf11\insrsid10638950 m}{\b\f37\fs20\cf1\insrsid10638950 (inutes) }{\b\f37\fs20\cf11\insrsid10638950 h}{
\b\f37\fs20\cf1\insrsid10638950 (our) }{\b\f37\fs20\cf11\insrsid10638950 d}{\b\f37\fs20\cf1\insrsid10638950 (ay) }{\b\f37\fs20\cf11\insrsid10638950 now}{\b\f37\fs20\cf1\insrsid10638950  }{\b\f37\fs20\cf11\insrsid10638950 M}{
\b\f37\fs20\cf1\insrsid10638950 (onths) }{\b\f37\fs20\cf11\insrsid10638950 y}{\b\f37\fs20\cf1\insrsid10638950 (ears)
\par 
\par }{\b\f37\cf1\insrsid10638950 $sesstimead = '+'.$sess_time.$sys_c_d_h;
\par 
\par $sess_datetype = $sys_conf_d;
\par }{\b\f37\fs20\cf1\insrsid10638950 # Type of sess time dimension
\par 
\par }{\b\f37\cf2\insrsid10638950 $rand_sid_length }{\b\f37\cf1\insrsid10638950 = '16';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Length of SID string!
\par 
\par }{\b\f37\cf2\insrsid10638950 $sess_cookie}{\b\f37\cf1\insrsid10638950  = 'sesstime';
\par }{\b\f37\fs20\cf1\insrsid10638950 # 'sesstime' - cookie expire when session expired. Enter any other value to expire cookie when user close browser.
\par 
\par }{\b\f37\cf2\insrsid10638950 $tmp}{\b\f37\cf1\insrsid10638950  = '/tmp';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Please set full path to your temp directory 
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $l_sid}{\b\f37\cf1\insrsid10638950  = 'sid';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Session label ID used by module
\par 
\par }{\b\f37\cf2\insrsid10638950 $referrer}{\b\f37\cf1\insrsid10638950  = '';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Please look at 'allowed.pl' for more info about 'referrer' restriction
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $cgi_lib_forbid_mulipart}{\b\f37\cf1\insrsid10638950  = 'off';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # If you want to protect yourself from multipart spam  turn this '}{\b\f37\fs20\cf11\insrsid10638950 on}{\b\f37\fs20\cf1\insrsid10638950 ' (you will be no longer able to use multipart forms)!
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $cgi_lib_maxdata }{\b\f37\cf1\insrsid10638950    = 300000;   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Set maximum bytes to accept via POST (some king of multipart 
\par # protection)
\par # }{\b\f37\fs20\cf6\insrsid10638950 Please note that you can't set this to 0!!!
\par }{\b\f37\fs20\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $cgi_script_timeout}{\b\f37\cf1\insrsid10638950  = 120;   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Expiration time of script! (120 seconds default). After expiration script 
\par # will be terminated!
\par # }{\b\f37\fs20\cf6\insrsid10638950 Please note that you can't set this to 0!!! You always must know how much time you need!
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $ip_restrict_mode}{\b\f37\cf1\insrsid10638950    = 'on';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Set 'on' to restrict session by IP! If you have proxy problems with 
\par # restricted IPs, please set 'off' or use proper
\par # function to set mode of this variable! (see: session_ip_restrict function)
\par }{\b\f37\cf1\insrsid10638950 
\par [}{\b\f37\cf12\insrsid10638950 Debug}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $debugging}{\b\f37\cf1\insrsid10638950  = 'on';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Set debugging mode
\par 
\par }{\b\f37\cf2\insrsid10638950 $debug_mail}{\b\f37\cf1\insrsid10638950  = 'on';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Show whether real mail must by sent or must by saved into mail 
\par # directory!
\par }{\b\f37\cf1\insrsid10638950 
\par [}{\b\f37\cf12\insrsid10638950 Mail}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $sendmail }{\b\f37\cf1\insrsid10638950 = '/usr/sbin/sendmail';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Real full path to sendmail
\par }{\b\f37\cf1\insrsid10638950 
\par [}{\b\f37\cf12\insrsid10638950 Other}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $var_printing_mode }{\b\f37\cf1\insrsid10638950 = 'buffered';   }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Default output is buffered, leave this variable empty if you need output of 
\par # your script to flush immediately!
\par 
\par }{\b\f37\cf2\insrsid10638950 $uni_sep}{\b\f37\cf1\insrsid10638950  = '\'a9';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Col separator
\par 
\par }{\b\f37\cf2\insrsid10638950 $uni_sep_t }{\b\f37\cf1\insrsid10638950 = '\\\'a9';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Col separator (slashed)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $uni_gr_sep }{\b\f37\cf1\insrsid10638950 = ':';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Row separator
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $uni_gr_sep_t }{\b\f37\cf1\insrsid10638950 = '\\:';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Row separator (slashed)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $uni_esc }{\b\f37\cf1\insrsid10638950 = '%';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Escape char
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $charset}{\b\f37\cf1\insrsid10638950  = 'n5b0xzlQWdgfNXytCMAwq1TYu7SVBmUIvcOPZ2aprER9kjh3sHJKL8e4oiDFG6';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Please mix well this chars to get higher security of your session ID :-)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $cpg_priority}{\b\f37\cf1\insrsid10638950  = 'cookie';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Show order of value fetching! There is 2 values: '}{\b\f37\fs20\cf11\insrsid10638950 cookie}{\b\f37\fs20\cf1\insrsid10638950 ' and '}{\b\f37\fs20\cf11\insrsid10638950 get/post}{\b\f37\fs20\cf1\insrsid10638950 '.
\par # '}{\b\f37\fs20\cf11\insrsid10638950 cookie}{\b\f37\fs20\cf1\insrsid10638950 ' means that cookie's variable has higher priority!
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $sess_cpg}{\b\f37\cf1\insrsid10638950  = 'cookie';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Type of session support: (It can be '}{\b\f37\fs20\cf11\insrsid10638950 cookie}{\b\f37\fs20\cf1\insrsid10638950 ' or Session ID can be moved by links or forms ('}{\b\f37\fs20\cf11\insrsid10638950 get/post}{
\b\f37\fs20\cf1\insrsid10638950 ')
\par 
\par }{\b\f37\cf2\insrsid10638950 $sess_force_flat }{\b\f37\cf1\insrsid10638950 = 'on';  }{\b\f37\fs20\cf6\insrsid10638950 # !!!}{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\fs20\cf1\insrsid10638950 # Session support via DB or via file! (possible values are: '}{\b\f37\fs20\cf11\insrsid10638950 on}{\b\f37\fs20\cf1\insrsid10638950 ' and '}{\b\f37\fs20\cf11\insrsid10638950 off}{\b\f37\fs20\cf1\insrsid10638950 ')
\par # When you haven't DB support in your hand, you still can use sessions without DataBase!
\par # To begin using DB instead of flat files just set "this" variable "}{\b\f37\fs20\cf11\insrsid10638950 off}{\b\f37\fs20\cf1\insrsid10638950 " (that is more secure and more compatible!)
\par # Most session functions required "dbh" but you can leave it empty or to supply real db handler: no matter!
\par # }{\b\f37\fs20\cf12\insrsid10638950 NOTE: Use flat files when you haven't 500 opened sessions in "}{\b\f37\fs20\cf11\insrsid10638950 tmp}{\b\f37\fs20\cf12\insrsid10638950 " directory or more!
\par }{\b\f37\fs20\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $support_email}{\b\f37\cf1\insrsid10638950  = 'support@your_host.com';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Support e-mail for unexpected errors! :)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 @treat_htmls_ext}{\b\f37\cf1\insrsid10638950  = (
\par }{\b\f37\fs20\cf1\insrsid10638950 # Order of html files location: Default, module first look for:
\par # "html","htm","whtml" and "cgihtml". If you specify in URL
\par # ...?file=env.html script will ignore extension and will look for
\par # file with extension orderd in @treat_htmls_ext array
\par # If you leave this array empty then no lookups will be made!
\par # Order of below array is realy important!
\par # Example:
\par # If your real file is: env.cgi and you want script to
\par # look for env.html then with array below you will never successed!
\par # That is true because find operation will be breaked when script found
\par # extension you look for  i.e. in our case (env.)html and after that it
\par # won\rquote t continue! So if you want to run files that match our example
\par # file then follow array should look like this: 
\par # (\lquote htm\rquote ,\rquote whtml\rquote ,\rquote cgihtml\rquote ,\rquote cgi\rquote ,\rquote html\rquote )
\par 
\par  }{\b\f37\cf1\insrsid10638950 'html',
\par  'htm',
\par  'whtml',
\par  'cgihtml',
\par  'cgi',
\par  );
\par 
\par [}{\b\f37\cf12\insrsid10638950 PATHS}{\b\f37\cf1\insrsid10638950 ]
\par }{\b\f37\cf2\insrsid10638950 $driver_path}{\b\f37\cf1\insrsid10638950  = './drivers/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Path to your DB Drivers (please keep structure)
\par 
\par }{\b\f37\cf2\insrsid10638950 $library_path }{\b\f37\cf1\insrsid10638950 = './libs/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Path to your Libraries (please keep structure)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $db_path}{\b\f37\cf1\insrsid10638950  = './db/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Path to your DBs and tables (please keep structure)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $mailsender_path }{\b\f37\cf1\insrsid10638950 = './mail/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Path to your DBs and tables (please keep structure)
\par }{\b\f37\cf2\insrsid10638950 
\par $xreader_path }{\b\f37\cf1\insrsid10638950 = './jhtml/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Path to your xreader files(jhtml-s) (please keep structure)
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $perl_html_dir }{\b\f37\cf1\insrsid10638950 = './htmls/';}{\b\f37\fs20\cf1\insrsid10638950 
\par # Path to your perl\rquote s(webtools scripts) html files
\par }{\b\f37\cf1\insrsid10638950 
\par }{\b\f37\cf2\insrsid10638950 $apacheshtdocs }{\b\f37\cf1\insrsid10638950 = 'c:/Apache/htdocs/';}{\b\f37\fs20\cf1\insrsid10638950 
\par # Path to your apache htdocs directory('/usr/local/apache/htdocs/')  (please keep structure)
\par }{\b\f37\cf2\insrsid10638950 
\par $cgi_home_path }{\b\f37\cf1\insrsid10638950 = Get_CGI_Directory();
\par }{\b\f37\fs20\cf1\insrsid10638950 # Get webtools cgi-bin directory (exmp: '/cgi-bin/webtools/') 
\par # NOTE: This path is not absolute and is not an HTTP!!! (actualy part of HTTP)
\par }{\b\f37\cf2\insrsid10638950 
\par $http_home_path }{\b\f37\cf1\insrsid10638950 = '/dw/webtools/';
\par }{\b\f37\fs20\cf1\insrsid10638950 # Please change this to your http path!
\par # NOTE: This path is not absolute and is not an HTTP!!! (actualy part of HTTP)
\par 
\par }{\f37\fs22\cf1\insrsid10638950 
\par }{\b\f37\fs32\cf9\insrsid10638950 7. }{\b\f37\fs32\ul\cf9\insrsid10638950 Various stuff\line \line }{\b\f37\fs20\cf1\insrsid10638950 That section regards various questions.\line \line 1. Highlighting for UltraEdit text editor.
\par    If you want to have feature of highlighting with Ultr}{\b\f37\fs20\cf1\insrsid14384398 aEdit please open your }{\b\f37\fs20\cf1\insrsid10638950 docs/WORDFILE.TXT 
\par Now go to your UltraEdit directory and open WORDFILE.TXT and add to this file contain of docs/WORDFILE.TXT file!\line Edit follow line: 
\par /L7"WebTools" .... 
\par you may need to change number of language supprt (default is 7: /L7....). 
\par Save changes of UltraEdit wordfile. Now UltraEdit will highlight files with extensions: whtml and cgihtml :-)}{\f37\fs22\cf1\insrsid10638950 
\par 
\par }{\b\f37\fs32\cf17\insrsid10638950 8. }{\b\f37\fs32\ul\cf6\insrsid10638950 AUTHOR}{\b\f37\fs32\cf6\insrsid10638950 :}{\b\f37\fs32\ul\cf6\insrsid10638950 
\par }{\b\f37\fs28\cf18\insrsid10638950 Julian Lishev
\par }{\b\f37\cf17\insrsid10638950 email:}{\b\f37\fs32\cf6\insrsid10638950  }{\b\f37\cf23\insrsid10638950 julian@proscriptum.com
\par }{\b\f37\fs22\cf17\insrsid10638950 Sofia, Bulgaria
\par 
\par }}